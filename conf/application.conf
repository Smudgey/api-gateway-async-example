# Copyright 2017 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

appName=api-gateway-async-example

appUrl="http://api-gateway-async-example"

play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Session configuration
# ~~~~~
session.httpOnly=true

session.secure=false

session.cookieName="mdtpapi"

# this key is for local development only!
cookie.encryption.key="gvBoGdgzqG1AarzF1LY0zQ=="

application.secret=changeme

# this key is for local development only!
application.secret="yNhI04vHs9<_HWbC`]20u`37=NGLGYY5:0Tg5?y`W<NoJnXWqmjcgZBec@rOxb^G"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global= uk.gov.hmrc.apigatewayexample.config.MicroserviceGlobal

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {

  confidenceLevel = 200


  com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
  }

  uk.gov.hmrc.api.controllers.DocumentationController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
  }

  uk.gov.hmrc.apigatewayexample.controllers.LiveExampleAsyncController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false

      authParams = {
        confidenceLevel = 200
      }
  }
}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
    logback = false
}

# Microservice specific

auditing {
  enabled = true
  traceRequests = false

  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {

    auth {
      host = localhost
      port = 8500
    }

    datastream {
      host = localhost
      port = 8100
    }

    service-locator {
      host = localhost
      port = 9602
    }

  }
}

mongodb {
  uri = "mongodb://localhost:27017/asynctaskcache"
}
